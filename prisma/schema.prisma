// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Asteroid {
  id            Int                  @id @default(autoincrement())
  name          String?
  ownerAddress  String?
  blockchain    Blockchain?
  spectralType  AsteroidSpectralType
  rarity        AsteroidRarity?
  purchaseOrder Int?

  scanStatus AsteroidScanStatus @default(UNSCANNED)
  lastScan   DateTime?

  size        AsteroidSize
  radius      Float
  surfaceArea Float        @default(0)

  orbitalPeriod Float
  semiMajorAxis Float
  inclination   Float
  eccentricity  Float

  salePrice Float?

  bonuses      AsteroidBonus[]
  ownerChanges AsteroidOwnerChange[]

  warehouses     Int @default(0)
  tankFarms      Int @default(0)
  extractors     Int @default(0)
  refineries     Int @default(0)
  bioreactors    Int @default(0)
  factories      Int @default(0)
  shipyards      Int @default(0)
  marketplaces   Int @default(0)
  spaceports     Int @default(0)
  habitats       Int @default(0)
  totalBuildings Int @default(0)
}

model AsteroidOwnerChange {
  id          Int         @id @default(autoincrement())
  asteroid    Asteroid    @relation(fields: [asteroidId], references: [id])
  asteroidId  Int
  fromAddress String?
  toAddress   String
  fromChain   Blockchain?
  toChain     Blockchain
  timestamp   DateTime
}

model AsteroidImportRun {
  id             Int       @id @default(autoincrement())
  runningWorkers Int
  start          DateTime
  end            DateTime?
}

enum Blockchain {
  ETHEREUM
  STARKNET
}

enum AsteroidScanStatus {
  UNSCANNED
  LONG_RANGE_SCAN
  ORBITAL_SCAN
}

model AsteroidBonus {
  id         Int               @id @default(autoincrement())
  level      Int
  modifier   Int
  type       AsteroidBonusType
  Asteroid   Asteroid          @relation(fields: [asteroidId], references: [id])
  asteroidId Int
}

model ShipRace {
  id              Int                   @id @default(autoincrement())
  name            String
  start           DateTime
  end             DateTime
  lastBlockNumber Int?
  participants    ShipRaceParticipant[]
  firstPrice      Int
  secondPrice     Int
  thirdPrice      Int
}

model ShipRaceParticipant {
  id         Int               @id @default(autoincrement())
  shipId     Int
  playerName String
  shipRace   ShipRace          @relation(fields: [shipRaceId], references: [id])
  shipRaceId Int
  transits   ShipRaceTransit[]
}

model ShipRaceTransit {
  id            Int                 @id @default(autoincrement())
  participantId Int
  participant   ShipRaceParticipant @relation(fields: [participantId], references: [id])
  origin        Int
  destination   Int
  departure     DateTime
  arrival       DateTime
}

enum AsteroidBonusType {
  YIELD
  VOLATILE
  METAL
  ORGANIC
  RARE_EARTH
  FISSILE
}

enum AsteroidSpectralType {
  C
  S
  M
  I
  CI
  CS
  SI
  CM
  SM
  CMS
  CIS
}

enum AsteroidSize {
  SMALL
  MEDIUM
  LARGE
  HUGE
}

enum AsteroidRarity {
  COMMON
  UNCOMMON
  RARE
  SUPERIOR
  EXCEPTIONAL
  INCOMPARABLE
}
